####codigo arduino 
```js
const int buttonPins[3] = {2, 3, 4};  // Pines de los 3 botones
const int potPin = A0;                 // Pin potenciómetro

void setup() {
  Serial.begin(9600);
  for (int i = 0; i < 3; i++) {
    pinMode(buttonPins[i], INPUT_PULLUP);
  }
}

void loop() {
  for (int i = 0; i < 3; i++) {
    int buttonState = digitalRead(buttonPins[i]);
    if (buttonState == LOW) {  // LOW porque usas INPUT_PULLUP (botón presionado conecta a GND)
      int potValue = analogRead(potPin);
      Serial.print("BTN");
      Serial.print(i + 1);
      Serial.print(",");
      Serial.println(potValue);
      delay(200);  // debounce simple
    }
  }
}
```

####codigo processing
```js
import processing.serial.*;

Serial myPort;
ArrayList<CircleData> circles;

void setup() {
  size(1200, 720);
  println(Serial.list());
  myPort = new Serial(this, Serial.list()[0], 9600);
  circles = new ArrayList<CircleData>();
  background(0);
}

void draw() {
  // No limpiar fondo para mantener círculos previos
  for (CircleData c : circles) {
    fill(c.colr);
    stroke(0);
    ellipse(c.x, c.y, c.size, c.size);
  }

  while (myPort.available() > 0) {
    String val = myPort.readStringUntil('\n');
    if (val != null) {
      val = trim(val);
      if (val.startsWith("BTN")) {
        String[] parts = split(val, ',');
        if (parts.length == 2) {
          String btnId = parts[0];  // BTN1, BTN2, BTN3
          float potVal = float(parts[1]);
          float circleSize = map(potVal, 0, 1023, 10, 100);
          int col = color(255);

          if (btnId.equals("BTN1")) {
            col = color(247, 122, 195);
          } else if (btnId.equals("BTN2")) {
            col = color(122, 227, 247);
          } else if (btnId.equals("BTN3")) {
            col = color(161, 247, 122);
          }
          circles.add(new CircleData(random(width), random(height), circleSize, col));
        }
      }
    }
  }
}

class CircleData {
  float x, y, size;
  int colr;

  CircleData(float x, float y, float size, int colr) {
    this.x = x;
    this.y = y;
    this.size = size;
    this.colr = colr;
  }
}
```




